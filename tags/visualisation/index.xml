<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visualisation on head spin - the Heads or Tails blog</title>
    <link>https://heads0rtai1s.github.io/tags/visualisation/</link>
    <description>Recent content in visualisation on head spin - the Heads or Tails blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://heads0rtai1s.github.io/tags/visualisation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Kaggle Leaderboard with gtExtras</title>
      <link>https://heads0rtai1s.github.io/2022/06/30/kaggle-leaderboard-gtextras/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/06/30/kaggle-leaderboard-gtextras/</guid>
      <description>My Kaggle Hidden Gems Notebooks competition officially concluded on May 17th. A number of great notebooks were being submitted, and I wanted to design a nice leaderboard to announce the final scores and winners. When I discovered the new gtExtras package, I instantly knew that it would be the perfect tool for this task. Let me show you how.
The goal of the Hidden Gems competition was to build insightful and engaging notebooks, in R or Python, exploring aspect of my Hidden Gems dataset on Kaggle, which chronicles 100 episodes of me highlighting underrated notebooks published by Kagglers.</description>
    </item>
    
    <item>
      <title>Charting Kaggle&#39;s growth to 10 million users</title>
      <link>https://heads0rtai1s.github.io/2022/06/23/kaggle-10-million/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/06/23/kaggle-10-million/</guid>
      <description>A few days ago, the Kaggle community crossed the amazing milestone of 10 million registered users! In celebration, I’ve put together a forum post that visualises the accelerated growth over the years. Here I show the R code behind those plots and talk a bit about my visualisation choices.
For this post, we’ll need a small set of fundamental libraries:
libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;readr&amp;#39;, # wrangling &amp;#39;lubridate&amp;#39;, &amp;#39;ggrepel&amp;#39;, # datetime, plots &amp;#39;ggthemes&amp;#39;, &amp;#39;ggplot2&amp;#39;) # plots invisible(lapply(libs, library, character.</description>
    </item>
    
    <item>
      <title>TidyTuesday and Barplots with Images</title>
      <link>https://heads0rtai1s.github.io/2022/04/28/gems-tidytuesday/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/04/28/gems-tidytuesday/</guid>
      <description>This week, the Kaggle Hidden Gems Competition is featured in a special crossover event with the fantastic TidyTuesday project to further strengthen the connections between the R &amp;amp; Kaggle communities. The TidyTuesday participants are invited to expand their beautifully crafted data visuals into narrative notebooks on the Kaggle platform, and receive feedback and prizes for their work. This post will briefly describe my goals and motivation for this collaboration, and then show the code for one of my own visuals where I learned how to include images in ggplot2 barplots.</description>
    </item>
    
    <item>
      <title>Designing a Kaggle Notebooks Competition</title>
      <link>https://heads0rtai1s.github.io/2022/04/19/gems-comp-design/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/04/19/gems-comp-design/</guid>
      <description>Two weeks ago, I launched my first very own competition on the Kaggle platform, the goal of which is to design engaging data science notebooks with great visuals, narration, and insights. Today, at the half-way point of the competition, I want to write about my motivations for creating this challenge, the underlying data, and my criteria of what makes a captivating and accessible notebook in the R or Python languages.</description>
    </item>
    
    <item>
      <title>Yearly goals: Tracking tools &amp; visuals</title>
      <link>https://heads0rtai1s.github.io/2022/02/10/goals-tracking-visuals/</link>
      <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/02/10/goals-tracking-visuals/</guid>
      <description>In my final post on setting up yearly goals I will write about how to track progress and finally add some data visuals. Building your own progress dashboards adds a nice meta level of data science to the journey and gives you more control over how to track your goals.
We’re loading the popular libraries for data wrangling and visuals:
libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;stringr&amp;#39;, &amp;#39;forcats&amp;#39;, # wrangling &amp;#39;tidyr&amp;#39;, &amp;#39;readr&amp;#39;, # wrangling &amp;amp; reading &amp;#39;gt&amp;#39;, # table styling &amp;#39;lubridate&amp;#39;, # date &amp;amp; time &amp;#39;ggplot2&amp;#39;, &amp;#39;ggthemes&amp;#39;, # plots &amp;#39;ggridges&amp;#39;, &amp;#39;patchwork&amp;#39;) # plots invisible(lapply(libs, library, character.</description>
    </item>
    
    <item>
      <title>Animations in the time of Coronavirus</title>
      <link>https://heads0rtai1s.github.io/2020/04/30/animate-map-covid/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/04/30/animate-map-covid/</guid>
      <description>The first four months of 2020 have been dominated by the Coronavirus pandemic (aka COVID-19), which has transformed global life in an unprecedented way. Societies and economies struggle to adapt to the new conditions and necessary contraints. A reassuringly large fraction of governments around the world continue to take evidence-based approaches to this crisis that are grounded in large scale data collection efforts. Most of this data is being made publicly available and can be studied in real time.</description>
    </item>
    
    <item>
      <title>R Shiny for beginners: annotated starter code</title>
      <link>https://heads0rtai1s.github.io/2019/12/05/shiny-starter-code/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/12/05/shiny-starter-code/</guid>
      <description>This week I decided to get started with the R shiny package for interactive web applications. As an absolute beginner, I want to document my learning journey in the hope that it will be useful for other first-time shiny users.
This post assumes some basic familiarity with R and the tidyverse, but no prior knowledge of shiny is required. The content is digested from the official shiny tutorial which is great and definitely worth checking out for more details.</description>
    </item>
    
    <item>
      <title>Tidyverse evolutions: curly-curly operator and pivoting (feat. tidytuesday data &amp; leaflet visuals)</title>
      <link>https://heads0rtai1s.github.io/2019/11/07/tidy-curly-pivot-leaflet/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/11/07/tidy-curly-pivot-leaflet/</guid>
      <description>The tidyverse ecosystem is steadily growing and adapting to the needs of its users. As part of this evolution, existing tools are being replaced by new and better methods. As useful as this flexibility is to the strength of the system, sometimes it can be hard to keep track of all the changes. This blogpost will deal with two new developments: the ‘curly-curly’ operator for tidy evaluation and the new ‘pivot’ functions for data reshaping.</description>
    </item>
    
    <item>
      <title>Tidy evaluation in R: Part 2 - Complex use cases (feat. facet zoom)</title>
      <link>https://heads0rtai1s.github.io/2019/08/22/tidy-eval-examples-part2/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/08/22/tidy-eval-examples-part2/</guid>
      <description>In an earlier post I gave a gentle introduction to tidy evaluation in the R tidyverse using simple examples. I covered quoting with enquo and unquoting with !! in brief dplyr and ggplot2 snippets. Today, I aim to build a collection of more complex use cases involving additional tools.
Those are our libraries:
libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;stringr&amp;#39;, # wrangling &amp;#39;knitr&amp;#39;,&amp;#39;kableExtra&amp;#39;, # table styling &amp;#39;ggplot2&amp;#39;,&amp;#39;ggforce&amp;#39;) # plots invisible(lapply(libs, library, character.</description>
    </item>
    
    <item>
      <title>Data flow visuals - alluvial vs ggalluvial in R</title>
      <link>https://heads0rtai1s.github.io/2019/06/06/visuals-alluvial-ggalluvial/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/06/06/visuals-alluvial-ggalluvial/</guid>
      <description>I have long been a fan of creative data visualisation techniques. For me, the choice of visual representation is driven by both the type of data and the kind of question one wants to examine.
The power of its visualisation tools has been a major strength of the R language well before the ggplot2 package and the tidyverse burst onto the scene. Today’s post will be an introductory examination of two similar packages that allow us to study the connection and flow of data between different categorical features via alluvial plots.</description>
    </item>
    
  </channel>
</rss>
