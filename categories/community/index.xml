<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>community on head spin - the Heads or Tails blog</title>
    <link>https://heads0rtai1s.github.io/categories/community/</link>
    <description>Recent content in community on head spin - the Heads or Tails blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jun 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://heads0rtai1s.github.io/categories/community/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Charting Kaggle&#39;s growth to 10 million users</title>
      <link>https://heads0rtai1s.github.io/2022/06/23/kaggle-10-million/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/06/23/kaggle-10-million/</guid>
      <description>
&lt;script src=&#34;https://heads0rtai1s.github.io/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;A few days ago, the Kaggle community crossed the amazing milestone of 10 million registered users! In celebration, I’ve put together a &lt;a href=&#34;https://www.kaggle.com/discussions/general/332147&#34;&gt;forum post that visualises the accelerated growth over the years&lt;/a&gt;. Here I show the R code behind those plots and talk a bit about my visualisation choices.&lt;/p&gt;
&lt;p&gt;For this post, we’ll need a small set of fundamental libraries:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;readr&amp;#39;,         # wrangling
          &amp;#39;lubridate&amp;#39;, &amp;#39;ggrepel&amp;#39;,   # datetime, plots
          &amp;#39;ggthemes&amp;#39;, &amp;#39;ggplot2&amp;#39;)    # plots
invisible(lapply(libs, library, character.only = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The data we’ll be using are a slightly processed version of what’s available from the public &lt;a href=&#34;https://www.kaggle.com/datasets/kaggle/meta-kaggle&#34;&gt;Meta Kaggle dataset&lt;/a&gt;. I downloaded the &lt;a href=&#34;https://www.kaggle.com/datasets/kaggle/meta-kaggle?select=Users.csv&#34;&gt;Users.csv table&lt;/a&gt; and aggregated the daily user counts and cumulated counts into this input table:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;users &amp;lt;- read_csv(&amp;quot;../../static/files/users_daily.csv&amp;quot;, col_types = cols())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before we break it down, here’s the full visual to illustrate the growth of the community:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;foo &amp;lt;- users %&amp;gt;%
  filter(date &amp;lt; max(date)) %&amp;gt;% 
  mutate(millions = ct %/% 1e6) %&amp;gt;% 
  mutate(year = year(date))

year(foo$date) &amp;lt;- 2017

col_values = rep(c(&amp;quot;#008abc&amp;quot;, &amp;quot;#e56c3a&amp;quot;), 10)[1:nrow(distinct(foo, millions))]

foo %&amp;gt;% 
  ggplot(aes(date, n, col = as.factor(millions))) +
  geom_line(na.rm = TRUE) +
  facet_wrap(~ year, scales = &amp;quot;free_y&amp;quot;) +
  scale_x_date(date_labels= &amp;quot;%b&amp;quot;) +
  scale_color_manual(values = col_values) +
  theme_hc() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;New Daily Users&amp;quot;,
  title = &amp;quot;13 years of Kaggle Community growth up to 10 million registered users&amp;quot;,
  subtitle = &amp;quot;New daily users over time for each year from 2010 to 2022. Note the scaled y-axis for each facet. Change in colour = Million Cumulative User Milestones.&amp;quot;,
  caption = &amp;quot;@headsortails with Meta Kaggle dataset&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-06-23-kaggle-10-million_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I chose this chart to visualise the accelerated growth over the years: Each change in colour represents the crossing of a million users milestone. In addition to the growth trend, the plot also showcases the seasonal pattern, the weekly cycle, and some interesting spikes.&lt;/p&gt;
&lt;p&gt;But most prominently, the periods between colour changes are becoming shorter and shorter as the user numbers increase faster and faster. From 2016 being the last year with only a single colour, we crossed the 1 million users mark in 2017, and 2021 showed a total of four colour changes.&lt;/p&gt;
&lt;p&gt;The construction of the plot starts with a little trick. After extracting a &lt;code&gt;year&lt;/code&gt; column, we’ll transform the year of each &lt;code&gt;date&lt;/code&gt; to 2017. This way, we can construct a facet wrap visual that still shows each year but also has shared x-axes. Maybe there’s a more elegant way to do this, but it works for me. (And why 2017? Because that’s the year I joined the Kaggle community. But that year doesn’t appear in the plot, so it’s a subtle easter egg for myself.) The &lt;code&gt;millions&lt;/code&gt; column will help with the colouring:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;foo &amp;lt;- users %&amp;gt;%
  filter(date &amp;lt; max(date)) %&amp;gt;% 
  mutate(millions = ct %/% 1e6) %&amp;gt;% 
  mutate(year = year(date))

year(foo$date) &amp;lt;- 2017&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’re getting the sequence of colours dynamically based on the number on million user milestones:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;col_values = rep(c(&amp;quot;#008abc&amp;quot;, &amp;quot;#e56c3a&amp;quot;), 10)[1:nrow(distinct(foo, millions))]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The actual visual starts with a line plot of daily users, which is split into facets by year. The modification of the &lt;code&gt;date&lt;/code&gt; feature now allows us share the x-axis between each facet. Here we haven’t done any styling on the theme or colours yet.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;foo %&amp;gt;% 
  ggplot(aes(date, n, col = as.factor(millions))) +
  geom_line(na.rm = TRUE) +
  facet_wrap(~ year, scales = &amp;quot;free_y&amp;quot;) +
  scale_x_date(date_labels= &amp;quot;%b&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-06-23-kaggle-10-million_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we’re adding the alternating colours and choose a theme that fades a bit more into the background. The colour legend disappears; we will describe the colours in the subtitle instead:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;foo %&amp;gt;% 
  ggplot(aes(date, n, col = as.factor(millions))) +
  geom_line(na.rm = TRUE) +
  facet_wrap(~ year, scales = &amp;quot;free_y&amp;quot;) +
  scale_x_date(date_labels= &amp;quot;%b&amp;quot;) +
  scale_color_manual(values = col_values) +
  theme_hc() +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-06-23-kaggle-10-million_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The final touches: we remove the x-axis label, since a date axis is pretty self-explanatory. Adding a title to communicate the big picture. And a subtitle to put an emphasis on some plot details:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;foo %&amp;gt;% 
  ggplot(aes(date, n, col = as.factor(millions))) +
  geom_line(na.rm = TRUE) +
  facet_wrap(~ year, scales = &amp;quot;free_y&amp;quot;) +
  scale_x_date(date_labels= &amp;quot;%b&amp;quot;) +
  scale_color_manual(values = col_values) +
  theme_hc() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;New Daily Users&amp;quot;,
  title = &amp;quot;13 years of Kaggle Community growth up to 10 million registered users&amp;quot;,
  subtitle = &amp;quot;New daily users over time for each year from 2010 to 2022. Note the scaled y-axis for each facet. Change in colour = Million Cumulative User Milestones.&amp;quot;,
  caption = &amp;quot;@headsortails with Meta Kaggle dataset&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-06-23-kaggle-10-million_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The accelerated growth of the community is testament to Kaggle’s great reputation as the home for Machine Learning and Data Science. Back when I joined, &lt;a href=&#34;https://www.kaggle.com/headsortails&#34;&gt;5 years ago in 2017&lt;/a&gt;, I was user ID 1,014,468. Since then, so much has happened: competitions have shifted their focus from tabular to NLP &amp;amp; Vision (with Deep Learning); we got a Datasets category; Discussion communities came and went; Kernels became Notebooks; Notebooks competitions became more frequent; and so much more.&lt;/p&gt;
&lt;p&gt;Many new faces rose to popularity through their creative and inspiring contributions. And many seasoned Kagglers grew their skillset by being consistently innovative and supportive. We had the occasional drama or argument; but who doesn’t? Through all this, the community grew faster and faster, by an order of magnitude, to keep up with the breathless developments in Machine Learning.&lt;/p&gt;
&lt;p&gt;Everything points towards this growth continuing in the near future. As a community, we are in a unique position to learn from the ongoing advancements in Data Science and Machine Learning, and to contribute our practitioner’s perspective to these exciting developments. It is also our responsibility to preserve the welcoming and supportive nature of our community, to nurture talent and enthusiasm, to fight spam, to maintain a safe and inclusive environment, to promote meritocracy, and to stay curious.&lt;/p&gt;
&lt;p&gt;There are many new adventures, but also challenges ahead of us.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Finally, here’s a bonus plot for you to deconstruct. This visualisation records the day of June 18th 2022, when the Kaggle community first reached 10 million unique registered members.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;users %&amp;gt;%
    filter(date &amp;gt;= date(&amp;quot;2022-06-20&amp;quot;) - 7) %&amp;gt;%
    filter(date != max(date)) %&amp;gt;%
    group_by(date) %&amp;gt;%
    mutate(lab = max(ct)) %&amp;gt;%
    ungroup()  %&amp;gt;%
    ggplot(aes(date, n)) +
    geom_line(col = &amp;quot;black&amp;quot;) +
    geom_label_repel(aes(date, n, label = scales::comma(lab)), size = 8, col = &amp;quot;#008abc&amp;quot;,
                     alpha = 0.8, force = 10, na.rm = TRUE) +
    scale_y_continuous(labels = scales::comma) +
    labs(x = &amp;quot;&amp;quot;, y = &amp;quot;New Daily Users&amp;quot;,
        title = &amp;quot;Kaggle crosses 10 million unique users on June 18th 2022!&amp;quot;,
        subtitle = &amp;quot;Black curve shows new daily users over time. Blue labels show total number of users.&amp;quot;,
        caption = &amp;quot;@headsortails with Meta Kaggle dataset&amp;quot;) +
    theme_minimal() +
    theme(axis.text = element_text(size = 12, colour = &amp;quot;black&amp;quot;),
          title = element_text(size = 15, colour = &amp;quot;#008abc&amp;quot;),  # &amp;quot;#e56c3a&amp;quot;
          axis.title = element_text(colour = &amp;quot;black&amp;quot;),
         plot.subtitle = element_text(size = 12, colour = &amp;quot;black&amp;quot;),
         plot.caption = element_text(colour = &amp;quot;black&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-06-23-kaggle-10-million_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TidyTuesday and Barplots with Images</title>
      <link>https://heads0rtai1s.github.io/2022/04/28/gems-tidytuesday/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/04/28/gems-tidytuesday/</guid>
      <description>
&lt;script src=&#34;https://heads0rtai1s.github.io/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This week, the &lt;a href=&#34;https://www.kaggle.com/discussions/general/317093&#34;&gt;Kaggle Hidden Gems Competition&lt;/a&gt; is featured in a special crossover event with the fantastic &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2022/2022-04-26/readme.md&#34;&gt;TidyTuesday project&lt;/a&gt; to further strengthen the connections between the R &amp;amp; Kaggle communities. The TidyTuesday participants are invited to expand their beautifully crafted data visuals into narrative notebooks on the Kaggle platform, and receive feedback and prizes for their work. This post will briefly describe my goals and motivation for this collaboration, and then show the code for one of my own visuals where I learned how to include images in ggplot2 barplots.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The &lt;a href=&#34;https://twitter.com/R4DScommunity?ref_src=twsrc%5Etfw&#34;&gt;@R4DScommunity&lt;/a&gt; welcomes you to week 17 of &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt;!  We&amp;#39;re exploring Kaggle Hidden Gems courtesy of &lt;a href=&#34;https://twitter.com/heads0rtai1s?ref_src=twsrc%5Etfw&#34;&gt;@heads0rtai1s&lt;/a&gt; !!&lt;br&gt;&lt;br&gt;📂 &lt;a href=&#34;https://t.co/sElb4fcv3u&#34;&gt;https://t.co/sElb4fcv3u&lt;/a&gt;&lt;br&gt;🗞 &lt;a href=&#34;https://t.co/OVy4t58mvO&#34;&gt;https://t.co/OVy4t58mvO&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/r4ds?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#r4ds&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/tidyverse?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidyverse&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/dataviz?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#dataviz&lt;/a&gt; &lt;a href=&#34;https://t.co/MP85A6im6h&#34;&gt;pic.twitter.com/MP85A6im6h&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tom Mock (@thomas_mock) &lt;a href=&#34;https://twitter.com/thomas_mock/status/1518729259828797445?ref_src=twsrc%5Etfw&#34;&gt;April 25, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;div id=&#34;a-tidytuesday-crossover-episode&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A TidyTuesday crossover episode&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/README.md&#34;&gt;TidyTuesday series&lt;/a&gt; is a long-running project organised by &lt;a href=&#34;https://twitter.com/thomas_mock&#34;&gt;Tom Mock&lt;/a&gt; and the &lt;a href=&#34;https://twitter.com/R4DScommunity&#34;&gt;R4DS online learning community&lt;/a&gt; and largely run on Twitter. Every week sees a new dataset, in varying states of tidiness, and the challenge is to wrangle, explore, and visualise this data. And each week the participants continue to delight and astonish with their creative solutions.&lt;/p&gt;
&lt;p&gt;The goals of TidyTuesday have a strong overlap with those of my Kaggle Hidden Gems competition, about which I wrote in &lt;a href=&#34;https://heads0rtai1s.github.io/2022/04/19/gems-comp-design&#34;&gt;last week’s post&lt;/a&gt;. For me, visualisations are at the heart of effective data science communication. The notebook format of the Hidden Gems challenge now opens up the opportunity to
take those visuals and embed them into an engaging and accessible story.&lt;/p&gt;
&lt;p&gt;I’ve already seen multiple great visuals through the &lt;code&gt;#TidyTuesday&lt;/code&gt; and &lt;code&gt;#Rstats&lt;/code&gt; hashtags on Twitter, and I plan to collect most or all of them in a future post.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;practice-new-ideas-images-in-barplots&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Practice new ideas: Images in Barplots&lt;/h3&gt;
&lt;p&gt;One major motivation for initiatives like TidyTuesday or this crossover project is to give the participants the opportunity to practice their data &amp;amp; dataviz skills, and to learn and showcase new tools and ideas. When I wrote my &lt;a href=&#34;https://www.kaggle.com/code/headsortails/hidden-gems-a-collection-of-underrated-notebooks&#34;&gt;Starter Notebook&lt;/a&gt; for the Hidden Gems data I did something similar and decide to challenge myself to learn how to include (png) images in plots.&lt;/p&gt;
&lt;p&gt;Here, I’m breaking down one of those plots, which uses the self-contained &lt;code&gt;kaggle_hidden_gems.csv&lt;/code&gt; dataset to study the frequencies of social media links on the profiles of the Hidden Gems authors.&lt;/p&gt;
&lt;p&gt;First, we get our required libraries:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;tibble&amp;#39;,      # wrangling
          &amp;#39;tidyr&amp;#39;, &amp;#39;stringr&amp;#39;,     # wrangling
          &amp;#39;tidytuesdayR&amp;#39;,         # tidytuesday
          &amp;#39;gt&amp;#39;,                   # tables
          &amp;#39;grid&amp;#39;, &amp;#39;magick&amp;#39;,       # images, plots
          &amp;#39;ggthemes&amp;#39;, &amp;#39;ggplot2&amp;#39;)  # plots
invisible(lapply(libs, library, character.only = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The dataset itself is &lt;a href=&#34;https://www.kaggle.com/datasets/headsortails/notebooks-of-the-week-hidden-gems&#34;&gt;publicly available on Kaggle&lt;/a&gt;, and through the TidyTuesday crossover it can now also be accessed via the &lt;a href=&#34;https://thebioengineer.github.io/tidytuesdayR/&#34;&gt;tidytuesdayR package&lt;/a&gt; like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tuesdata &amp;lt;- tidytuesdayR::tt_load(&amp;#39;2022-04-26&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Downloading file 1 of 1: `hidden_gems.csv`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gems &amp;lt;- tuesdata$hidden_gems&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The detailed exploration of the dataset and its features is of course the goal of the Hidden Gems Competition and the TidyTuesday challenge, so here I’ll be focussing only on this narrow question: what percentage of Hidden Gems authors have a Twitter link in their bio vs a LinkedIn link?&lt;/p&gt;
&lt;p&gt;Here we are interested in the features &lt;code&gt;author_twitter&lt;/code&gt; and &lt;code&gt;author_linkedin&lt;/code&gt; that contain the social links. We’re reformatting those columns a little and pivot them to a longer table. This is so that we can group by the social &lt;code&gt;media&lt;/code&gt; platform and extract the fractions of authors that display those links in their profiles. Note, that this code is more elegant than what I originally wrote for the starter notebook:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;foo &amp;lt;- gems %&amp;gt;% 
  distinct(author_twitter, author_linkedin) %&amp;gt;%
  pivot_longer(everything(), names_to = &amp;quot;media&amp;quot;, values_to = &amp;quot;links&amp;quot;) %&amp;gt;% 
  mutate(media = str_to_title(str_replace(media, &amp;quot;author_&amp;quot;, &amp;quot;&amp;quot;))) %&amp;gt;% 
  group_by(media) %&amp;gt;% 
  summarise(total = n(),
            ct = sum(!is.na(links)),
            frac = mean(!is.na(links)))

foo %&amp;gt;% 
  gt()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;vwjoqjnsel&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#vwjoqjnsel .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#vwjoqjnsel .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vwjoqjnsel .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#vwjoqjnsel .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#vwjoqjnsel .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vwjoqjnsel .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vwjoqjnsel .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#vwjoqjnsel .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#vwjoqjnsel .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#vwjoqjnsel .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#vwjoqjnsel .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#vwjoqjnsel .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#vwjoqjnsel .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#vwjoqjnsel .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#vwjoqjnsel .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#vwjoqjnsel .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#vwjoqjnsel .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#vwjoqjnsel .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vwjoqjnsel .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#vwjoqjnsel .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vwjoqjnsel .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#vwjoqjnsel .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#vwjoqjnsel .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vwjoqjnsel .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vwjoqjnsel .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#vwjoqjnsel .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vwjoqjnsel .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#vwjoqjnsel .gt_left {
  text-align: left;
}

#vwjoqjnsel .gt_center {
  text-align: center;
}

#vwjoqjnsel .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#vwjoqjnsel .gt_font_normal {
  font-weight: normal;
}

#vwjoqjnsel .gt_font_bold {
  font-weight: bold;
}

#vwjoqjnsel .gt_font_italic {
  font-style: italic;
}

#vwjoqjnsel .gt_super {
  font-size: 65%;
}

#vwjoqjnsel .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;media&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;total&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;ct&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;frac&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Linkedin&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;188&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;171&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9095745&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Twitter&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;188&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;91&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.4840426&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;We see that there are 188 distinct authors in total, and that 91% have their LinkedIn displayed but only 48% their Twitter. That’s a notable difference, and it provides interesting insights into how Kaggle profiles might be used and perceived in a wider social context.&lt;/p&gt;
&lt;p&gt;We could turn this into a simple barplot and be done here, but our goal is to practice using images. We will use the logos of the respective platforms, which I’ve downloaded and made available in the &lt;a href=&#34;https://www.kaggle.com/datasets/headsortails/notebooks-of-the-week-hidden-gems&#34;&gt;Hidden Gems dataset&lt;/a&gt; for convenience.&lt;/p&gt;
&lt;p&gt;We will make a little helper table that contains the image path:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path_img &amp;lt;- &amp;quot;/pics/&amp;quot;

img_d &amp;lt;- tibble(
  media = c(&amp;quot;Linkedin&amp;quot;, &amp;quot;Twitter&amp;quot;),
  img = str_c(path_img, c(&amp;quot;linkedIn_logo.png&amp;quot;, &amp;quot;twitter_logo_v2.png&amp;quot;))
)

img_d %&amp;gt;% 
  gt()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;gufypnvyrp&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#gufypnvyrp .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#gufypnvyrp .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gufypnvyrp .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#gufypnvyrp .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#gufypnvyrp .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gufypnvyrp .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gufypnvyrp .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#gufypnvyrp .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#gufypnvyrp .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#gufypnvyrp .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#gufypnvyrp .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#gufypnvyrp .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#gufypnvyrp .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#gufypnvyrp .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#gufypnvyrp .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#gufypnvyrp .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#gufypnvyrp .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#gufypnvyrp .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gufypnvyrp .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#gufypnvyrp .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gufypnvyrp .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#gufypnvyrp .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#gufypnvyrp .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gufypnvyrp .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gufypnvyrp .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#gufypnvyrp .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gufypnvyrp .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#gufypnvyrp .gt_left {
  text-align: left;
}

#gufypnvyrp .gt_center {
  text-align: center;
}

#gufypnvyrp .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#gufypnvyrp .gt_font_normal {
  font-weight: normal;
}

#gufypnvyrp .gt_font_bold {
  font-weight: bold;
}

#gufypnvyrp .gt_font_italic {
  font-style: italic;
}

#gufypnvyrp .gt_super {
  font-size: 65%;
}

#gufypnvyrp .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;media&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;img&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Linkedin&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;/pics/linkedIn_logo.png&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Twitter&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;/pics/twitter_logo_v2.png&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;And here’s the plot itself in a single cell:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- foo %&amp;gt;% 
  ggplot(aes(media, frac)) +
  geom_col(fill = &amp;quot;white&amp;quot;) +
  scale_y_continuous(labels = scales::percent, breaks = seq(0, 1, 0.1)) +
  theme_hc() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;, title = &amp;quot;Percentage of Authors with Social Media on their Profile&amp;quot;)

p_dat &amp;lt;- ggplot_build(p)

p_map &amp;lt;- p_dat$data[[1]] %&amp;gt;% 
  select(xmin, xmax, ymin, ymax) %&amp;gt;% 
  bind_cols(foo %&amp;gt;% select(media)) %&amp;gt;% 
  left_join(img_d, by = &amp;quot;media&amp;quot;)

for (i in seq(nrow(p_map))){
  
  p &amp;lt;- p +
    annotation_custom(
      grid::rasterGrob(image_read(p_map$img[i]), 
                 width = unit(1, &amp;quot;npc&amp;quot;), 
                 height = unit(1, &amp;quot;npc&amp;quot;)),
      xmin = p_map$xmin[i], 
      xmax = p_map$xmax[i],
      ymin = p_map$ymin[i],
      ymax = p_map$ymax[i])
}
  
print(p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-04-28-gems-tidytuesday_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You see that the logos now act like the bars in the plot, and are scaled to the height of the bar. It’s easy to get carried away with effects like this, but I think with only a few images and a clean style the plot still remains readable and informative.&lt;/p&gt;
&lt;p&gt;Ok, now let’s break it down.&lt;/p&gt;
&lt;p&gt;We first build the barplot in the normal way with &lt;code&gt;geom_col&lt;/code&gt;. The bars add like a white background, but we could also turn them fully transparent. We format the y-axis with percentages, add a nice theme and a title to set up our canvas:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- foo %&amp;gt;% 
  ggplot(aes(media, frac)) +
  geom_col(fill = &amp;quot;white&amp;quot;) +
  scale_y_continuous(labels = scales::percent, breaks = seq(0, 1, 0.1)) +
  theme_hc() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;, title = &amp;quot;Percentage of Authors with Social Media on their Profile&amp;quot;)

print(p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-04-28-gems-tidytuesday_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You see that the plot style is already there, and we only need to fill in the images. We achieve that by first deconstruct the plot object from above via &lt;code&gt;ggplot_build&lt;/code&gt; into a set of components that can be used to render the graph.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p_dat &amp;lt;- ggplot_build(p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The outcome is a list with three entries: &lt;code&gt;data&lt;/code&gt; (the bars), &lt;code&gt;layout&lt;/code&gt; (the plot settings), and &lt;code&gt;plot&lt;/code&gt; (the rendered outcome). I’m not going to show all of it here, but you can easily print and inspect it. For our purposes, we will take the &lt;code&gt;data&lt;/code&gt; entry and add our image links:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p_map &amp;lt;- p_dat$data[[1]] %&amp;gt;% 
  select(xmin, xmax, ymin, ymax) %&amp;gt;% 
  bind_cols(foo %&amp;gt;% select(media)) %&amp;gt;% 
  left_join(img_d, by = &amp;quot;media&amp;quot;)

p_map %&amp;gt;% 
  gt()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;oqvbgaywho&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#oqvbgaywho .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#oqvbgaywho .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#oqvbgaywho .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#oqvbgaywho .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#oqvbgaywho .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#oqvbgaywho .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#oqvbgaywho .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#oqvbgaywho .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#oqvbgaywho .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#oqvbgaywho .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#oqvbgaywho .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#oqvbgaywho .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#oqvbgaywho .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#oqvbgaywho .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#oqvbgaywho .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#oqvbgaywho .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#oqvbgaywho .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#oqvbgaywho .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#oqvbgaywho .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#oqvbgaywho .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#oqvbgaywho .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#oqvbgaywho .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#oqvbgaywho .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#oqvbgaywho .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#oqvbgaywho .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#oqvbgaywho .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#oqvbgaywho .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#oqvbgaywho .gt_left {
  text-align: left;
}

#oqvbgaywho .gt_center {
  text-align: center;
}

#oqvbgaywho .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#oqvbgaywho .gt_font_normal {
  font-weight: normal;
}

#oqvbgaywho .gt_font_bold {
  font-weight: bold;
}

#oqvbgaywho .gt_font_italic {
  font-style: italic;
}

#oqvbgaywho .gt_super {
  font-size: 65%;
}

#oqvbgaywho .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;xmin&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;xmax&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;ymin&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;ymax&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;media&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;img&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;0.55&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1.45&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9095745&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Linkedin&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;/pics/linkedIn_logo.png&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;1.55&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2.45&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.4840426&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Twitter&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;/pics/twitter_logo_v2.png&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;This gives us the dimensions of the bars and the image that we want to add to them. Now all that’s left is to loop through this table and add the image.&lt;/p&gt;
&lt;p&gt;Here, &lt;code&gt;annotation_custom&lt;/code&gt; is a &lt;code&gt;ggplot2&lt;/code&gt; helper for inserting images or decorations. The images themselves are read by &lt;code&gt;image_read&lt;/code&gt; from the &lt;a href=&#34;https://github.com/ropensci/magick&#34;&gt;magick package&lt;/a&gt; and rendered by &lt;code&gt;rasterGrob&lt;/code&gt; from the &lt;code&gt;grid&lt;/code&gt; package. Then we’re setting the x and y dimensions according to the plot data and the final plot is ready:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in seq(nrow(p_map))){
  
  p &amp;lt;- p +
    annotation_custom(
      grid::rasterGrob(magick::image_read(p_map$img[i]), 
                 width = unit(1, &amp;quot;npc&amp;quot;),
                 height = unit(1, &amp;quot;npc&amp;quot;)),
      xmin = p_map$xmin[i], 
      xmax = p_map$xmax[i],
      ymin = p_map$ymin[i],
      ymax = p_map$ymax[i])
}
  
print(p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2022-04-28-gems-tidytuesday_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are many variations possible here, including images as backgrounds, images on top bars (which I’m doing in my starter notebook for R vs Python insights), logos in image corners, and much more. If used sparingly, these kind of visual elements can enrich your visuals and insights presentations.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Got interested in playing with these kind of plots? I’d love to see your ideas!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/discussions/general/317093&#34;&gt;Join the Hidden Gems challenge&lt;/a&gt; and show us your skills, or fork my &lt;a href=&#34;https://www.kaggle.com/code/headsortails/hidden-gems-a-collection-of-underrated-notebooks&#34;&gt;Starter Notebook&lt;/a&gt; to tinker with the code and get inspired.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2022/2022-04-26/readme.md&#34;&gt;TidyTuesday crossover&lt;/a&gt; is still running, and you are very welcome to share your ideas with the community on Twitter.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Designing a Kaggle Notebooks Competition</title>
      <link>https://heads0rtai1s.github.io/2022/04/19/gems-comp-design/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/04/19/gems-comp-design/</guid>
      <description>
&lt;script src=&#34;https://heads0rtai1s.github.io/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Two weeks ago, I launched my &lt;a href=&#34;https://www.kaggle.com/discussions/general/317093&#34;&gt;first very own competition on the Kaggle platform&lt;/a&gt;, the goal of which is to design engaging data science notebooks with great visuals, narration, and insights. Today, at the half-way point of the competition, I want to write about my motivations for creating this challenge, the underlying data, and my criteria of what makes a captivating and accessible notebook in the R or Python languages. All of this is strongly connected to what I see as one of the most underrated skills in the fields of data science (DS) and machine learning (ML): the ability to effectively communicate your approach and your findings.&lt;/p&gt;
&lt;p&gt;But let’s start at the beginning.&lt;/p&gt;
&lt;div id=&#34;the-hidden-gems-project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The Hidden Gems project&lt;/h3&gt;
&lt;p&gt;It was two years ago when, out of a whim and a chat on Twitter, I’ve decided that it was time to put a spotlight on the underrated content found within the Kaggle community. The &lt;a href=&#34;https://www.kaggle.com&#34;&gt;Kaggle platform&lt;/a&gt; has grown dramatically over the last years, and so has the number of &lt;a href=&#34;https://www.kaggle.com/code&#34;&gt;Kaggle Notebooks&lt;/a&gt;, i.e. Jupyter or Rmarkdown analysis notebooks of competitions, datasets, tutorials, dataviz challenges, and more. One of the great strengths of the Kaggle platform is the ability to run those notebooks in their cloud environment; complete with free compute, GPU &amp;amp; TPU time, a pre-installed DS &amp;amp; ML stack, and access to tons of different datasets.&lt;/p&gt;
&lt;p&gt;Naturally, such a powerful environment, together with a supportive yet competitive community, produces a lot of great content. There are many notebooks on Kaggle that for good reasons are very popular: they explain state-of-the-art ML approaches, present new modelling ideas, enlighten us with detailed data explorations, or showcase carefully crafted visuals. But at the same time there are also notebooks that have a high quality yet, for whichever reason, haven’t received many views, upvotes, or feedback. The Hidden Gems project is my attempt to rectify this situation. I wanted to do my little bit in helping to get those notebooks and their authors the attention that they deserve.&lt;/p&gt;
&lt;p&gt;From the &lt;a href=&#34;https://www.kaggle.com/general/150603&#34;&gt;very beginning&lt;/a&gt;, my goal with this series has been to showcase underrated Kaggle Notebooks and to illuminate the diversity and creativity of the community. My selections are always highly subjective; reflecting my own views and preferences. And I always encourage the readers of the series to further engage with the community by posting about other underestimated Notebooks in the comments.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-reason-to-celebrate&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A Reason to Celebrate&lt;/h3&gt;
&lt;p&gt;Over the last two years, I managed to keep up a cadence of posting about three underrated notebooks per week; every week. On each Tuesday, without fail, I would publish a new episode of Hidden Gems on Kaggle and on social media. I’ve learnt a lot during this time from all the notebooks that I’ve reviewed. And reading new and interesting works has become an integral part of my week.&lt;/p&gt;
&lt;p&gt;There were notable milestones on the way: for episode 50 I’ve created a &lt;a href=&#34;https://www.kaggle.com/datasets/headsortails/notebooks-of-the-week-hidden-gems&#34;&gt;dedicated Kaggle dataset of all my Hidden Gems episodes&lt;/a&gt; together with a &lt;a href=&#34;https://www.kaggle.com/code/headsortails/hidden-gems-a-collection-of-underrated-notebooks&#34;&gt;Starter Notebook written in tidyverse R&lt;/a&gt;. The notebook also drew connections to the comprehensive &lt;a href=&#34;https://www.kaggle.com/kaggle/meta-kaggle&#34;&gt;Meta Kaggle dataset&lt;/a&gt;, where Kaggle publishes all the meta data about the community.&lt;/p&gt;
&lt;p&gt;And on Tuesday April 5th 2022 my little series reached its &lt;a href=&#34;https://www.kaggle.com/discussions/general/317093&#34;&gt;100th episode&lt;/a&gt;! I’m still pretty amazed at this significant milestone; and at the fact that Kagglers have continued to visit and appreciate my episodes throughout those one hundred weeks. This definitely called for a celebration.&lt;/p&gt;
&lt;p&gt;I much prefer to celebrate with my fellow Kagglers, so on the very same day I launched a &lt;a href=&#34;https://www.kaggle.com/discussions/general/317093&#34;&gt;surprise competition&lt;/a&gt; aimed at exploring the Hidden Gems data and its connections to related datasets. Over the preceding weeks and months, I had managed to put together a stellar panel of judges to evaluate the submissions and to obtain cool swag prizes (and more!) from Kaggle itself and from the &lt;a href=&#34;https://wandb.ai/site&#34;&gt;Weights &amp;amp; Biases platform&lt;/a&gt;. Thanks so much for sponsoring this!&lt;/p&gt;
&lt;p&gt;I also want to emphasize that in the design of this competition I drew on inspiration from the different judges, especially from &lt;a href=&#34;https://twitter.com/bhutanisanyam1&#34;&gt;Sanyam Bhutani&lt;/a&gt;, the host of the popular &lt;a href=&#34;https://www.youtube.com/c/chaitimedatascience&#34;&gt;Chai Time Data Science podcast&lt;/a&gt;, who had hosted his own &lt;a href=&#34;https://www.kaggle.com/datasets/rohanrao/chai-time-data-science&#34;&gt;Notebooks competition&lt;/a&gt; back in 2020. I got a lot of ideas from that competition and I’m grateful to Sanyam and &lt;a href=&#34;https://www.kaggle.com/rohanrao&#34;&gt;Rohan Rao&lt;/a&gt; for organising it and inviting me to the panel of judges back then.&lt;/p&gt;
&lt;p&gt;The main goal of the Hidden Gems competition is to help people learn and practice how to craft engaging and insightful DS &amp;amp; ML presentations. All contributions are guaranteed to receive an evaluation and constructive feedback from a panel of highly experienced Kaggle community members. Below this overview infographic I share instructions on how to join, as well as my advice on the important elements of a successful notebook.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/pics/hidden_gems_competition.jpeg&#34; title=&#34;The Hidden Gems Competition poster&#34; style=&#34;width:100.0%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluation-criteria-what-makes-a-great-notebook&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluation Criteria: What makes a great notebook?&lt;/h3&gt;
&lt;p&gt;This is not a typical Kaggle competition with predictions that are scored on a leaderboard. Instead, &lt;em&gt;submissions are Kaggle Notebooks&lt;/em&gt;. Anyone can participate simply by creating a public Notebook on the Hidden Gems dataset. All submission will be evaluated by a panel of expert judges on five specific criteria.&lt;/p&gt;
&lt;p&gt;These are the criteria which I see as the cornerstones of communicating accessible ML &amp;amp; DS insights. Here is a list explaining each criterion, in no particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Quality of data visuals:&lt;/strong&gt; How clean, well designed, and approachable are the visualisations? Does the type of visualisation match the kind of insight that is being communicated? Are there consistent styles or colour schemes?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Narration &amp;amp; storytelling:&lt;/strong&gt; Is the analysis well explained and documented to allow the reader to understand insights and their context? Does the notebook follow an engaging flow? Are there certain narrative tools that make the work stand out?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Structure &amp;amp; presentation:&lt;/strong&gt; Are the different parts of the notebook well defined? How do those parts relate to one another? Is the code clean? Are the key insights centered, but the code and context easily accessible?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Quality of insights:&lt;/strong&gt; Are the insights relevant, useful, and actionable? Does the notebook tell us something new, unexpected, or counter intuitive? Does the work contain recommendations or predictions for the future?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Creativity &amp;amp; originality:&lt;/strong&gt; How novel and inventive are the ideas and approach? Am I positively surprised by some stylistic choices or discovered findings? Does the author have their own style, and perhaps take some design risks in expressing it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might notice that those criteria have a strong overlap with best practices in data journalism. Which makes sense, because the goals are very similar: to clearly present a cohesive narrative that is insightful and accessible to an audience. Like for many ways of communicating, the details here depend on who your audience is and what kind of findings your are communicating. The Kaggle community is likely more technically inclined than most, so you could decide to put a strong emphasis on well documented data wrangling or model architectures. Or you could hide all the code in your notebook and rely on a strong narrative with a few hand-crafted visuals. Like in a good piece of popular data journalism.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-to-join&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How to join&lt;/h3&gt;
&lt;p&gt;If you share my passion for dataviz and storytelling, then you might now be interested to know how you can join this competition to practice your skills and win some prizes. You might even consider to join the Kaggle platform just to compete in this challenge, in which case I’d be very honoured. This might be a good time to mention that there is a special prize category for people who will have written their very first Kaggle notebook.&lt;/p&gt;
&lt;p&gt;To join, go to the &lt;a href=&#34;https://www.kaggle.com/datasets/headsortails/notebooks-of-the-week-hidden-gems/discussion/317098&#34;&gt;dataset page&lt;/a&gt;. At the very top, you will find a button that says “New Notebook”. Click that, and choose between Python or R (and R Jupyter notebook or Rmarkdown). You will find yourself in the Kaggle editor, where the dataset is already available, and start exploring.&lt;/p&gt;
&lt;p&gt;If you would like to watch some examples of what can be done with the dataset and how to use the Kaggle editor, here are a few live streams done by the members of the judge panel:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=o__J3bkp2PQ&#34;&gt;The launch stream by Sanyam Bhutani and myself&lt;/a&gt; - where we explain the background and setup of the competition in detail. I go through my starter notebook, and Sanyam shows how to connect to the Weights &amp;amp; Biases platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J2iLOkIqwQo&#34;&gt;Stream on Abhishek Thakur’s youtube channel&lt;/a&gt; - focussing on overall EDA advice and how to write engaging notebooks. We answer quite a few questions from the audience and talk about the notebook that won the first weekly price.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.twitch.tv/videos/1449472244&#34;&gt;Live coding with Rob Mulla on twitch&lt;/a&gt; - a more in-depth chat about motivations and various EDA techniques in R and Python. I’m explaining my R starter notebook and Rob starts a live EDA in Python.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=o-Cefl_zLEk&#34;&gt;Live coding EDA by Andrada Olteanu hosted by Sanyam Bhutani&lt;/a&gt; - full of great advice for notebook design and dataviz crafting. Andrada starts a live EDA in Python.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Kaggle editor works pretty well for Jupyter-style notebooks. When it comes to Rmarkdown content, I prefer to build it locally in Rstudio and then copy/paste my work into the Kaggle environment and run it there (button “Save Version”). This way, you can take advantage of all the Rstudio tools.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Hopefully this post got you interested in joining the ongoing competition to practice your skills when it comes to EDA and notebook design. I would love to see your ideas and creativity! And to reward them with some cool swag prizes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/datasets/headsortails/notebooks-of-the-week-hidden-gems/discussion/317098&#34;&gt;You can join here.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Analysing tweets with the rtweet package</title>
      <link>https://heads0rtai1s.github.io/2020/02/20/rtweet-intro/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/02/20/rtweet-intro/</guid>
      <description>
&lt;script src=&#34;https://heads0rtai1s.github.io/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This is a brief post on collecting and analysing tweets. I will show how to use the &lt;a href=&#34;https://github.com/ropensci/rtweet&#34;&gt;rtweet&lt;/a&gt; package to extract Twitter posts about the R community. This ties into last weeks post on &lt;a href=&#34;https://heads0rtai1s.github.io/2020/02/13/rstudio-conf/&#34;&gt;rstudio::conf and community values&lt;/a&gt;, and is also related to my previous &lt;a href=&#34;https://heads0rtai1s.github.io/2020/01/23/rvest-intro-astro/&#34;&gt;intro post on web scraping&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, we load &lt;code&gt;rtweet&lt;/code&gt; and other (&lt;a href=&#34;https://www.tidyverse.org/&#34;&gt;tidyverse&lt;/a&gt;) packages we will need:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;tibble&amp;#39;,      # wrangling
          &amp;#39;stringr&amp;#39;, &amp;#39;rtweet&amp;#39;,    # strings, tweets
          &amp;#39;knitr&amp;#39;, &amp;#39;kableExtra&amp;#39;,  # table styling
          &amp;#39;lubridate&amp;#39;,            # time
          &amp;#39;ggplot2&amp;#39;, &amp;#39;ggthemes&amp;#39;)  # plots
invisible(lapply(libs, library, character.only = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In order to use the &lt;code&gt;rtweet&lt;/code&gt; package you need a &lt;a href=&#34;https://twitter.com&#34;&gt;Twitter&lt;/a&gt; account and the package needs to be authorised to access that account. The authorisation process is very smooth: just run a command like the one below and an authorisation tab will open in your browser (via &lt;code&gt;rstats2twitter&lt;/code&gt;). Approving the authorisation will store a credential token on your machine (called &lt;code&gt;.rtweet_token.rds&lt;/code&gt;) for a all future requests. This token should end up safe in your home directory, but you might still want to double check that it doesn’t get pushed to any public github repos.&lt;/p&gt;
&lt;p&gt;This is how we search for recent tweets about “rstats” + “community”:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rt &amp;lt;- search_tweets(
  &amp;quot;rstats community&amp;quot;, n = 1000, include_rts = FALSE
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the search string, white space acts like “AND” and order doesn’t matter. To search for either term (inclusive) you can use “OR”. To search for specific sequences of terms wrap them in single quotes (e.g. ‘rstats community’). The &lt;code&gt;search_tweets&lt;/code&gt; &lt;a href=&#34;https://www.rdocumentation.org/packages/rtweet/versions/0.7.0/topics/search_tweets&#34;&gt;help page&lt;/a&gt; has further and more detailed query instructions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: the free Twitter API only allows you to access tweets from the last 6-9 days.&lt;/strong&gt; For anything more you need a paid API. I was originally planning to search for &lt;code&gt;#rstudioconf&lt;/code&gt; tweets, but the conference is 3 weeks ago now. So I guess that’s what I get for taking so long with this post.&lt;/p&gt;
&lt;p&gt;Twitter’s &lt;em&gt;request limit is 18k tweets per 15 minute interval&lt;/em&gt;. To download more tweets in one go you can set the parameter &lt;code&gt;retryonratelimit = TRUE&lt;/code&gt;, but you would have to wait 15 min for the retry. This is a convenience function, so that you don’t need to run individual 18k queries and stack them together by yourself.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;search_tweets&lt;/code&gt; we can derive pretty much all the information about a tweet, its author, and any quoted tweets: the full text, retweet count, hashtags, mentions, author bio; you name it. A total of 90 columns. Not all of them will always have values, but it looks like a very comprehensive set of features to me. Here is a small subset of those features: the date-time of the tweet (in UT), the user name, and the number of followers:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rt %&amp;gt;% 
  select(tweeted = created_at,
         screen_name,
         followers = followers_count) %&amp;gt;% 
  head(5) %&amp;gt;% 
  kable() %&amp;gt;% 
  column_spec(1:3, width = c(&amp;quot;45%&amp;quot;, &amp;quot;35%&amp;quot;, &amp;quot;20%&amp;quot;)) %&amp;gt;% 
  kable_styling()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
tweeted
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
screen_name
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
followers
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
2020-02-20 18:32:47
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
danicassol
&lt;/td&gt;
&lt;td style=&#34;text-align:right;width: 45%; &#34;&gt;
157
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
2020-02-20 17:51:03
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
LK_Fitzpatrick
&lt;/td&gt;
&lt;td style=&#34;text-align:right;width: 45%; &#34;&gt;
511
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
2020-02-20 17:40:19
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
PyData
&lt;/td&gt;
&lt;td style=&#34;text-align:right;width: 45%; &#34;&gt;
48209
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
2020-02-20 16:34:52
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
rOpenSci
&lt;/td&gt;
&lt;td style=&#34;text-align:right;width: 45%; &#34;&gt;
28207
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
2020-02-20 13:24:03
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 45%; &#34;&gt;
GiusCalamita
&lt;/td&gt;
&lt;td style=&#34;text-align:right;width: 45%; &#34;&gt;
38
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We’ll conclude with some (small number) statistics about “rstats” “community” posts. The &lt;a href=&#34;https://rtweet.info/&#34;&gt;rtweet docs&lt;/a&gt; include many more examples and inspiration for projects. This is the frequency of tweets over the last week:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rt %&amp;gt;% 
  mutate(date = date(created_at)) %&amp;gt;% 
  count(date) %&amp;gt;% 
  ggplot(aes(date, n)) +
  geom_line(col = &amp;quot;blue&amp;quot;) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;) +
  theme_fivethirtyeight() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  ggtitle(&amp;quot;Daily number of tweets about the &amp;#39;rstats community&amp;#39;&amp;quot;,
          subtitle = &amp;quot;Extracted using the rtweet package&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://heads0rtai1s.github.io/post/2020-02-20-rtweet-intro_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The notable spike on Feb 12 was caused by &lt;code&gt;@kierisi&lt;/code&gt; asking about people’s experiences with the community. I’m looking forward to her blog post:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m working on a presentation about the R Community (yes, yes I&amp;#39;ll make a blog post!) and while I have *my* opinions, I&amp;#39;d really love to showcase your experiences!&lt;br&gt;&lt;br&gt;What motivated you to join the &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; community? Why do you participate? What makes you stay?&lt;br&gt;&lt;br&gt;(DMs are OK, too!) &lt;a href=&#34;https://t.co/7h3xKZ0Cg2&#34;&gt;pic.twitter.com/7h3xKZ0Cg2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jesse Mostipak 🦦 (@kierisi) &lt;a href=&#34;https://twitter.com/kierisi/status/1227666597860577281?ref_src=twsrc%5Etfw&#34;&gt;February 12, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>rstudio::conf retrospective</title>
      <link>https://heads0rtai1s.github.io/2020/02/13/rstudio-conf/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/02/13/rstudio-conf/</guid>
      <description>


&lt;p&gt;Two weeks ago, I was fortunate to attend my very first &lt;a href=&#34;https://rstudio.com/conference/&#34;&gt;Rstudio conference&lt;/a&gt;. Spoiler: it was an amazing event - packed to the brim with new ideas, tools, impressions, and most important of all: smart and kind people. This was the first time that San Francisco was hosting “rstudio::conf” (the affectionate shorthand is mirroring R’s package::tool syntax). Having moved to the Bay Area not long ago I really counted myself lucky to have such a promising event in my neighbourhood.&lt;/p&gt;
&lt;p&gt;I have written about the importance of a strong and supportive community once before: in &lt;a href=&#34;https://heads0rtai1s.github.io/2019/04/19/great-community-kaggledays19/&#34;&gt;last year’s post&lt;/a&gt; on meeting my favourite &lt;a href=&#34;https://www.kaggle.com&#34;&gt;Kaggle&lt;/a&gt; crowd for the first time in real life. The rstudio::conf confirmed my belief that progress in any field is greatly boosted by having friendly and competent people around to support you and lift you up.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://heads0rtai1s.github.io/pics/rstudioconf20_1.jpg&#34; alt=&#34;rstudio::conf opening; with about 20% of the audience visible&#34; style=&#34;width:100.0%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;&lt;em&gt;rstudio::conf opening; with about 20% of the audience visible&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Nothing exemplifies this attitude better than the way in which the R community has embraced the &lt;a href=&#34;https://www.ericholscher.com/blog/2017/aug/2/pacman-rule-conferences/&#34;&gt;Pac-Man rule&lt;/a&gt;: “When standing as a group of people, always leave room for 1 person to join your group.” In other words, if you’re talking as a group then don’t stand in a closed circle but leave a bit of free space for anyone who’d like to participate in the conversation. At rstudio::conf I saw this concept work extremely well and it allowed me (and many others) to quickly connect with new people and have fun and inspiring conversations. It may have also helped that we all had at least one thing in common to talk about.&lt;/p&gt;
&lt;p&gt;Another key aspect the R community excels in is to actively champion diversity and inclusion. This diversity within the community is mirrored by, and without a doubt contributes to, the richness and variety of the growing R ecosystem. In a tech sector that is still predominantly white and/or male, I strongly believe that the more a community welcomes all strata of society the better it can evolve and strive.&lt;/p&gt;
&lt;p&gt;And the R universe, including the tidyverse, is growing rapidly indeed. I learned lots of new tricks from seasoned expeRts (like the unpacking operator &lt;code&gt;%&amp;lt;-%&lt;/code&gt; from the &lt;a href=&#34;https://rdrr.io/cran/zeallot/man/operator.html&#34;&gt;zeallot package&lt;/a&gt;) and discovered so many cool packages I hadn’t been aware of. To name only three, in no particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/HenrikBengtsson/future&#34;&gt;future&lt;/a&gt;: the promising heir to the popular &lt;a href=&#34;https://cran.r-project.org/web/packages/foreach/index.html&#34;&gt;foreach package&lt;/a&gt; in the parallel processing domain; developed by &lt;a href=&#34;https://github.com/HenrikBengtsson&#34;&gt;Henrik Bengtsson&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/EvaMaeRey/flipbookr&#34;&gt;flipbookr&lt;/a&gt;: &lt;a href=&#34;https://github.com/EvaMaeRey&#34;&gt;Gina Reynolds’&lt;/a&gt; side-by-side and step-by-step tool to illustrate how code turns into output. Great resource for teaching and demonstrations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tidymodels/tune&#34;&gt;tune&lt;/a&gt;: the newest &lt;a href=&#34;https://github.com/tidymodels&#34;&gt;tidymodels&lt;/a&gt; family member; responsible for tuning hyperparameters. Presented by mastermind &lt;a href=&#34;https://github.com/topepo&#34;&gt;Max Kuhn&lt;/a&gt;, it was great to see how the individual tidymodels components come together to soon form a powerful and consistent machine learning workflow. Exciting times ahead!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But of course the most important consequence of the healthy expansion of the R ecosystem is the existence of many new hex stickers ;-) . This was my first opportunity to become a hunter and gatherer of those colourful collectibles, and I managed to ultimately design a whole new look for my laptop:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://heads0rtai1s.github.io/pics/rstudioconf20_2.jpg&#34; alt=&#34;I’m gonna need a bigger laptop&#34; style=&#34;width:100.0%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;&lt;em&gt;I’m gonna need a bigger laptop&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;More resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For all your R and Data Science needs check out the R for Data Science (R4DS) online learning community on &lt;a href=&#34;https://twitter.com/R4DScommunity&#34;&gt;twitter&lt;/a&gt; and slack!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You’re probably not surprised to hear that there is an R package that lets you design your own hex stickers. It is called &lt;a href=&#34;https://github.com/GuangchuangYu/hexSticker&#34;&gt;hexSticker&lt;/a&gt;. That name is probably even less surprising.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you’re interested to meet fellow R enthusiasts you can &lt;a href=&#34;https://jumpingrivers.github.io/meetingsR/&#34;&gt;find here&lt;/a&gt; a pretty comprehensive list of events and user groups.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
