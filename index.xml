<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>head spin - the Heads or Tails blog</title>
    <link>https://heads0rtai1s.github.io/</link>
    <description>Recent content on head spin - the Heads or Tails blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://heads0rtai1s.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Charting Kaggle&#39;s growth to 10 million users</title>
      <link>https://heads0rtai1s.github.io/2022/06/23/kaggle-10-million/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/06/23/kaggle-10-million/</guid>
      <description>A few days ago, the Kaggle community crossed the amazing milestone of 10 million registered users! In celebration, I’ve put together a forum post that visualises the accelerated growth over the years. Here I show the R code behind those plots and talk a bit about my visualisation choices.
For this post, we’ll need a small set of fundamental libraries:
libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;readr&amp;#39;, # wrangling &amp;#39;lubridate&amp;#39;, &amp;#39;ggrepel&amp;#39;, # datetime, plots &amp;#39;ggthemes&amp;#39;, &amp;#39;ggplot2&amp;#39;) # plots invisible(lapply(libs, library, character.</description>
    </item>
    
    <item>
      <title>TidyTuesday and Barplots with Images</title>
      <link>https://heads0rtai1s.github.io/2022/04/28/gems-tidytuesday/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/04/28/gems-tidytuesday/</guid>
      <description>This week, the Kaggle Hidden Gems Competition is featured in a special crossover event with the fantastic TidyTuesday project to further strengthen the connections between the R &amp;amp; Kaggle communities. The TidyTuesday participants are invited to expand their beautifully crafted data visuals into narrative notebooks on the Kaggle platform, and receive feedback and prizes for their work. This post will briefly describe my goals and motivation for this collaboration, and then show the code for one of my own visuals where I learned how to include images in ggplot2 barplots.</description>
    </item>
    
    <item>
      <title>Designing a Kaggle Notebooks Competition</title>
      <link>https://heads0rtai1s.github.io/2022/04/19/gems-comp-design/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/04/19/gems-comp-design/</guid>
      <description>Two weeks ago, I launched my first very own competition on the Kaggle platform, the goal of which is to design engaging data science notebooks with great visuals, narration, and insights. Today, at the half-way point of the competition, I want to write about my motivations for creating this challenge, the underlying data, and my criteria of what makes a captivating and accessible notebook in the R or Python languages.</description>
    </item>
    
    <item>
      <title>R &amp; Python Rosetta Stone: Reading files and column transformations</title>
      <link>https://heads0rtai1s.github.io/2022/02/24/r-python-read-separate/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/02/24/r-python-read-separate/</guid>
      <description>This post continues my series on translations between R and Python code for common data science and machine learning tasks. A documented cheat sheet for those such as myself, who frequently switch between the two languages for different tasks.
I had written the first post in this series back in late 2020, full of optimism that it would kick off a whole series of frequent posts on the topic.</description>
    </item>
    
    <item>
      <title>Yearly goals: Tracking tools &amp; visuals</title>
      <link>https://heads0rtai1s.github.io/2022/02/10/goals-tracking-visuals/</link>
      <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/02/10/goals-tracking-visuals/</guid>
      <description>In my final post on setting up yearly goals I will write about how to track progress and finally add some data visuals. Building your own progress dashboards adds a nice meta level of data science to the journey and gives you more control over how to track your goals.
We’re loading the popular libraries for data wrangling and visuals:
libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;stringr&amp;#39;, &amp;#39;forcats&amp;#39;, # wrangling &amp;#39;tidyr&amp;#39;, &amp;#39;readr&amp;#39;, # wrangling &amp;amp; reading &amp;#39;gt&amp;#39;, # table styling &amp;#39;lubridate&amp;#39;, # date &amp;amp; time &amp;#39;ggplot2&amp;#39;, &amp;#39;ggthemes&amp;#39;, # plots &amp;#39;ggridges&amp;#39;, &amp;#39;patchwork&amp;#39;) # plots invisible(lapply(libs, library, character.</description>
    </item>
    
    <item>
      <title>EDA guidelines &amp; live coding experience</title>
      <link>https://heads0rtai1s.github.io/2022/01/27/eda-guide-livecoding/</link>
      <pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/01/27/eda-guide-livecoding/</guid>
      <description>Last week, I was spontaneously invited to contribute a live-coding exploratory data analysis (EDA) to a recently launched Kaggle community competition. I accepted the invite, and 24h later we were live-streaming my first encounter with the data on YouTube. Here are my reflections on this experience and on my EDA process in general.
The context The Kaggle platform, my favourite machine learning (ML) and data science (DS) community, recently made it much easier for Kagglers to host their own competitions.</description>
    </item>
    
    <item>
      <title>Yearly goals: 2022 targets</title>
      <link>https://heads0rtai1s.github.io/2022/01/20/goals-2022-targets/</link>
      <pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/01/20/goals-2022-targets/</guid>
      <description>This is the second part in a series of posts about setting and tracking my yearly goals when it comes to Machine Learning &amp;amp; Data Science (ML &amp;amp; DS) as well as Sports &amp;amp; Exercise. In the first post I wrote about my past goals for 2021 and the lessons learned from those. This post will focus on my goals and expectations for 2022, and how last year’s experiences shaped and informed them.</description>
    </item>
    
    <item>
      <title>Yearly goals: 2021 experiences</title>
      <link>https://heads0rtai1s.github.io/2022/01/13/goals-2021-results/</link>
      <pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2022/01/13/goals-2021-results/</guid>
      <description>At the beginning of last year, I got the motivation from other people’s Twitter posts to set and track my own goals for what would surely be the year we would emerge from the shadows of the pandemic. With an ever so slightly more jaded outlook to life, I’m doing the same this year. On a global level, many societies didn’t seem to have learned an aweful lot from the Covid years of 2020 and 2021.</description>
    </item>
    
    <item>
      <title>Colab Pro&#43; Features, Kaggling on Colab, and Cloud GPU Platforms</title>
      <link>https://heads0rtai1s.github.io/2021/08/24/colab-plus-kaggle-cloud-gpu/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2021/08/24/colab-plus-kaggle-cloud-gpu/</guid>
      <description>In the final, hectic days of a recent Kaggle competition I found myself in want of more GPU power. As one often does in such an occasion. My own laptop, with its GPU setup, was doing a fine job with various small models and small images, but scaling up both aspects became necessary to climb the leaderboard further. My first choice options GCP and AWS quickly turned out to require quota increases which either didn’t happen or took too long.</description>
    </item>
    
    <item>
      <title>Installing CUDA, tensorflow, torch for R &amp; Python on Ubuntu 20.04</title>
      <link>https://heads0rtai1s.github.io/2021/02/25/gpu-setup-r-python-ubuntu/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2021/02/25/gpu-setup-r-python-ubuntu/</guid>
      <description>Last weekend, I finally managed to get round to upgrading Ubuntu from version 19.10 to the long-term support release 20.04 on my workhorse laptop. To be precise, I’m using the Kubuntu flavour since I’m more of a KDE guy myself. I usually do a fresh install on those occasions, instead of a dist_upgrade, because it’s a good opportunity to remove clutter and update software that I might otherwise just keep at an older version, out of convenience.</description>
    </item>
    
    <item>
      <title>R &amp; Python Rosetta Stone: EDA with dplyr vs pandas</title>
      <link>https://heads0rtai1s.github.io/2020/11/05/r-python-dplyr-pandas/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/11/05/r-python-dplyr-pandas/</guid>
      <description>This is the first post in a new series featuring translations between R and Python code for common data science and machine learning tasks. A Rosetta Stone, if you will. I’m writing this mainly as a documented cheat sheet for myself, as I’m frequently switching between the two languages. Personally, I have learned Python and R around the same time, several years ago, but tidy R is much more intuitive to me than any other language.</description>
    </item>
    
    <item>
      <title>Animations in the time of Coronavirus</title>
      <link>https://heads0rtai1s.github.io/2020/04/30/animate-map-covid/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/04/30/animate-map-covid/</guid>
      <description>The first four months of 2020 have been dominated by the Coronavirus pandemic (aka COVID-19), which has transformed global life in an unprecedented way. Societies and economies struggle to adapt to the new conditions and necessary contraints. A reassuringly large fraction of governments around the world continue to take evidence-based approaches to this crisis that are grounded in large scale data collection efforts. Most of this data is being made publicly available and can be studied in real time.</description>
    </item>
    
    <item>
      <title>Analysing tweets with the rtweet package</title>
      <link>https://heads0rtai1s.github.io/2020/02/20/rtweet-intro/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/02/20/rtweet-intro/</guid>
      <description>This is a brief post on collecting and analysing tweets. I will show how to use the rtweet package to extract Twitter posts about the R community. This ties into last weeks post on rstudio::conf and community values, and is also related to my previous intro post on web scraping.
First, we load rtweet and other (tidyverse) packages we will need:
libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;tibble&amp;#39;, # wrangling &amp;#39;stringr&amp;#39;, &amp;#39;rtweet&amp;#39;, # strings, tweets &amp;#39;knitr&amp;#39;, &amp;#39;kableExtra&amp;#39;, # table styling &amp;#39;lubridate&amp;#39;, # time &amp;#39;ggplot2&amp;#39;, &amp;#39;ggthemes&amp;#39;) # plots invisible(lapply(libs, library, character.</description>
    </item>
    
    <item>
      <title>rstudio::conf retrospective</title>
      <link>https://heads0rtai1s.github.io/2020/02/13/rstudio-conf/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/02/13/rstudio-conf/</guid>
      <description>Two weeks ago, I was fortunate to attend my very first Rstudio conference. Spoiler: it was an amazing event - packed to the brim with new ideas, tools, impressions, and most important of all: smart and kind people. This was the first time that San Francisco was hosting “rstudio::conf” (the affectionate shorthand is mirroring R’s package::tool syntax). Having moved to the Bay Area not long ago I really counted myself lucky to have such a promising event in my neighbourhood.</description>
    </item>
    
    <item>
      <title>Web Scraping with rvest &#43; Astro Throwback</title>
      <link>https://heads0rtai1s.github.io/2020/01/23/rvest-intro-astro/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2020/01/23/rvest-intro-astro/</guid>
      <description>In my first post of the year I will provide a gentle introduction to web scraping with the tidyverse package rvest. As the package name pun suggests, web scraping is the process of harvesting, or extracting, data from websites. The extraction process is greatly simplified by the fact that websites are predominantly built using HTML (= Hyper Text Markup Language), which essentially uses a set of formatting and structuring rules to tell your browser how to display a website.</description>
    </item>
    
    <item>
      <title>R Shiny for beginners: annotated starter code</title>
      <link>https://heads0rtai1s.github.io/2019/12/05/shiny-starter-code/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/12/05/shiny-starter-code/</guid>
      <description>This week I decided to get started with the R shiny package for interactive web applications. As an absolute beginner, I want to document my learning journey in the hope that it will be useful for other first-time shiny users.
This post assumes some basic familiarity with R and the tidyverse, but no prior knowledge of shiny is required. The content is digested from the official shiny tutorial which is great and definitely worth checking out for more details.</description>
    </item>
    
    <item>
      <title>Tidyverse evolutions: curly-curly operator and pivoting (feat. tidytuesday data &amp; leaflet visuals)</title>
      <link>https://heads0rtai1s.github.io/2019/11/07/tidy-curly-pivot-leaflet/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/11/07/tidy-curly-pivot-leaflet/</guid>
      <description>The tidyverse ecosystem is steadily growing and adapting to the needs of its users. As part of this evolution, existing tools are being replaced by new and better methods. As useful as this flexibility is to the strength of the system, sometimes it can be hard to keep track of all the changes. This blogpost will deal with two new developments: the ‘curly-curly’ operator for tidy evaluation and the new ‘pivot’ functions for data reshaping.</description>
    </item>
    
    <item>
      <title>The best of both worlds: R meets Python via reticulate</title>
      <link>https://heads0rtai1s.github.io/2019/10/03/reticulate-intro/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/10/03/reticulate-intro/</guid>
      <description>As far as rivalries go, R vs Python can almost reach the levels of the glory days of Barca vs Madrid, Stones vs Beatles, or Sega vs Nintendo. Almost. Just dare to venture onto Twitter asking which language is best for data science to witness two tightly entrenched camps. Or at least that’s what seemingly hundreds of Medium articles would like you believe. In reality, beyond some good-natured and occasionally entertaining joshing, the whole debate is rather silly.</description>
    </item>
    
    <item>
      <title>Astronomy to Data Science - A Travel Journal</title>
      <link>https://heads0rtai1s.github.io/2019/09/19/first-six-months/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/09/19/first-six-months/</guid>
      <description>The first six months as a Data Scientist have gone by in a blur of new tools, techniques, and experiences. In my new job, I’m lucky to be (once again) part of a great team of people who are not just smart, but always happy to share their knowledge and feedback in a productive and thoughtful way. A supportive environment helps a lot. Surprising insight - I know. Worth repeating nonetheless.</description>
    </item>
    
    <item>
      <title>Blogroll</title>
      <link>https://heads0rtai1s.github.io/blogroll/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/blogroll/</guid>
      <description>I enjoy reading these blogs:
  R-bloggers - your one-stop shop for hundreds of R related blogs.
  Hyndsight - Rob Hyndman&amp;rsquo;s musings on forecasting and statistics research.
  </description>
    </item>
    
    <item>
      <title>Tidy evaluation in R: Part 2 - Complex use cases (feat. facet zoom)</title>
      <link>https://heads0rtai1s.github.io/2019/08/22/tidy-eval-examples-part2/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/08/22/tidy-eval-examples-part2/</guid>
      <description>In an earlier post I gave a gentle introduction to tidy evaluation in the R tidyverse using simple examples. I covered quoting with enquo and unquoting with !! in brief dplyr and ggplot2 snippets. Today, I aim to build a collection of more complex use cases involving additional tools.
Those are our libraries:
libs &amp;lt;- c(&amp;#39;dplyr&amp;#39;, &amp;#39;stringr&amp;#39;, # wrangling &amp;#39;knitr&amp;#39;,&amp;#39;kableExtra&amp;#39;, # table styling &amp;#39;ggplot2&amp;#39;,&amp;#39;ggforce&amp;#39;) # plots invisible(lapply(libs, library, character.</description>
    </item>
    
    <item>
      <title>Data flow visuals - alluvial vs ggalluvial in R</title>
      <link>https://heads0rtai1s.github.io/2019/06/06/visuals-alluvial-ggalluvial/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/06/06/visuals-alluvial-ggalluvial/</guid>
      <description>I have long been a fan of creative data visualisation techniques. For me, the choice of visual representation is driven by both the type of data and the kind of question one wants to examine.
The power of its visualisation tools has been a major strength of the R language well before the ggplot2 package and the tidyverse burst onto the scene. Today’s post will be an introductory examination of two similar packages that allow us to study the connection and flow of data between different categorical features via alluvial plots.</description>
    </item>
    
    <item>
      <title>Tidy evaluation in R - Simple Examples</title>
      <link>https://heads0rtai1s.github.io/2019/04/24/tidy-eval-examples/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/04/24/tidy-eval-examples/</guid>
      <description>The tidyverse philosophy introduced by Hadley Wickham has been a game changer for the R community. It is based on intuitive rules of what a tidy data set should look like: each variable is a column, each observation is a row (Wickham 2014). At its core, the tidyverse collection of R packages is powered by a consistent grammar of data manipulation and visualisation.
The tidyverse grammar makes it easier to manipulate data sets using simple expressions that reduce the syntactic overhead and allow you to focus on the data.</description>
    </item>
    
    <item>
      <title>What makes a community great?</title>
      <link>https://heads0rtai1s.github.io/2019/04/19/great-community-kaggledays19/</link>
      <pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/04/19/great-community-kaggledays19/</guid>
      <description>The easy answer to this question is: the people. Great people build great communities. Case not quite closed yet, though, because there is more to it. Even the most promising group of individuals needs certain conditions in order to grow into a strong and thriving community. The kind of community that lifts up its members beyond their individual capabilities and becomes more than the sum of their proverbial skills and contributions.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://heads0rtai1s.github.io/about/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/about/</guid>
      <description>head spin - the Heads or Tails blog
 Data Scientist - Astrophysicist by training - Kaggler in my free time - Optimist - Heavenly Body - Curious at heart</description>
    </item>
    
    <item>
      <title>Prologue</title>
      <link>https://heads0rtai1s.github.io/2019/04/08/prologue/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://heads0rtai1s.github.io/2019/04/08/prologue/</guid>
      <description>This one is all about change. In many ways life is about change. Not all change is good, but without it there would be no evolution. No progress. And as much as we sometimes want certain moments to last, stagnation is rarely a good thing. Without attempting something new it is impossible to say whether it will succeed. I guess that’s a verbose way of saying: I decided to start a blog.</description>
    </item>
    
  </channel>
</rss>
